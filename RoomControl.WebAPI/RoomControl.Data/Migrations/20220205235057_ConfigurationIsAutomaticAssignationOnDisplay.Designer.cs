// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomControl.Data;

namespace RoomControl.Data.Migrations
{
    [DbContext(typeof(CHContext))]
    [Migration("20220205235057_ConfigurationIsAutomaticAssignationOnDisplay")]
    partial class ConfigurationIsAutomaticAssignationOnDisplay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoomControl.Data.Model.GeneralConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRoomStateOnQueue")
                        .HasColumnType("int");

                    b.Property<bool>("IsAutomaticAssignationOnDisplay")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GeneralConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRoomStateOnQueue = 1,
                            IsAutomaticAssignationOnDisplay = false
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.Queue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("IdQueueStack")
                        .HasColumnType("int");

                    b.Property<int>("MinutesSpentOnCleanUp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Queues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            IdQueueStack = 0,
                            MinutesSpentOnCleanUp = 20,
                            Name = "Cola Sencilla"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            IdQueueStack = 0,
                            MinutesSpentOnCleanUp = 20,
                            Name = "Cola Completa"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            IdQueueStack = 0,
                            MinutesSpentOnCleanUp = 20,
                            Name = "Cola VIP"
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.QueueImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdQueue")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdQueue");

                    b.ToTable("QueueImages");
                });

            modelBuilder.Entity("RoomControl.Data.Model.QueueStack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdQueue")
                        .HasColumnType("int");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomState")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdQueue")
                        .IsUnique();

                    b.HasIndex("IdRoom");

                    b.HasIndex("IdRoomState");

                    b.ToTable("QueueStacks");
                });

            modelBuilder.Entity("RoomControl.Data.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQueue")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomPrice")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomState")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomType")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdQueue");

                    b.HasIndex("IdRoomPrice");

                    b.HasIndex("IdRoomState");

                    b.HasIndex("IdRoomType");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Suite Junior 1",
                            IdQueue = 1,
                            IdRoomPrice = 1,
                            IdRoomState = 1,
                            IdRoomType = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Suite Junior 2",
                            IdQueue = 1,
                            IdRoomPrice = 1,
                            IdRoomState = 1,
                            IdRoomType = 1,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Master con jacuzzi 1",
                            IdQueue = 1,
                            IdRoomPrice = 1,
                            IdRoomState = 1,
                            IdRoomType = 2,
                            Number = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Description = "Master con jacuzzi 2",
                            IdQueue = 2,
                            IdRoomPrice = 1,
                            IdRoomState = 1,
                            IdRoomType = 2,
                            Number = 2
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomState")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRoom");

                    b.HasIndex("IdRoomState");

                    b.ToTable("RoomHistory");
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ByHours")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RoomPrices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ByHours = 4,
                            Price = 350.0
                        },
                        new
                        {
                            Id = 2,
                            ByHours = 12,
                            Price = 750.0
                        },
                        new
                        {
                            Id = 3,
                            ByHours = 24,
                            Price = 1200.0
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "bg-success",
                            Description = "Disponible",
                            Position = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "bg-danger",
                            Description = "Ocupado",
                            Position = 2
                        },
                        new
                        {
                            Id = 3,
                            Color = "bg-warning",
                            Description = "Sucia",
                            Position = 3
                        },
                        new
                        {
                            Id = 4,
                            Color = "bg-secondary",
                            Description = "Mantenimiento",
                            Position = 0
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sencilla"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Completa"
                        });
                });

            modelBuilder.Entity("RoomControl.Data.Model.QueueImage", b =>
                {
                    b.HasOne("RoomControl.Data.Model.Queue", "Queue")
                        .WithMany("Images")
                        .HasForeignKey("IdQueue")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Queue");
                });

            modelBuilder.Entity("RoomControl.Data.Model.QueueStack", b =>
                {
                    b.HasOne("RoomControl.Data.Model.Queue", "Queue")
                        .WithOne("QueueStack")
                        .HasForeignKey("RoomControl.Data.Model.QueueStack", "IdQueue")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.Room", "Room")
                        .WithMany("QueueStacks")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.RoomState", "RoomState")
                        .WithMany("QueueStacks")
                        .HasForeignKey("IdRoomState")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Queue");

                    b.Navigation("Room");

                    b.Navigation("RoomState");
                });

            modelBuilder.Entity("RoomControl.Data.Model.Room", b =>
                {
                    b.HasOne("RoomControl.Data.Model.Queue", "Queue")
                        .WithMany("Rooms")
                        .HasForeignKey("IdQueue")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.RoomPrice", "RoomPrice")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomPrice")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.RoomState", "RoomState")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomState")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Queue");

                    b.Navigation("RoomPrice");

                    b.Navigation("RoomState");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomHistory", b =>
                {
                    b.HasOne("RoomControl.Data.Model.Room", "Room")
                        .WithMany("RoomMovements")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoomControl.Data.Model.RoomState", "RoomState")
                        .WithMany("RoomMovements")
                        .HasForeignKey("IdRoomState")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomState");
                });

            modelBuilder.Entity("RoomControl.Data.Model.Queue", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("QueueStack");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("RoomControl.Data.Model.Room", b =>
                {
                    b.Navigation("QueueStacks");

                    b.Navigation("RoomMovements");
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomPrice", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomState", b =>
                {
                    b.Navigation("QueueStacks");

                    b.Navigation("RoomMovements");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("RoomControl.Data.Model.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
